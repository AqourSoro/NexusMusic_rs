import "../fonts/fusion-pixel-10px-proportional.ttc";

export component InWindowTopBar inherits VerticalLayout
{
    height: 25px;
    width: 1080px;

    in property <string> title;
    in-out property <string> font;
    in property <brush> titleColor;

    // if mouse button is pressed.
    property <bool> drag-area-pressed: false;

    property <bool> can-drag:false;
    property <bool> draging:false;

    // record the position of the press.
    out property <length> drag-area-down-x: 0;
    out property <length> drag-area-down-y: 0;

    property <length> component-x: self.absolute-position.x;
    property <length> component-y: self.absolute-position.y;

    property <length> corner-radius: 8px;

    callback move-window(length, length);
    callback close();

    Rectangle 
    {
        height: root.height;
        background: #ffc5c5;
        border-radius: corner-radius;

        HorizontalLayout 
        {

            //padding-right: 5px;
            spacing: 10px;


            Rectangle 
            {
                width: root.height;
                height: root.height;
                border-radius: corner-radius;
                clip: true;
                Image 
                {

                    width: root.height;
                    height: root.height;

                    image-fit:fill;
                    image-rendering: smooth;
                    

                    source: @image-url("../../../resources/pixels/icons/Nexus_logo_s.png");

                }
            }
            

            ApplicationTitle := Text 
            {
                font-family: "Fusion Pixel 10px Proportional zh_hans";
                text: title;
                font-size: root.height * 63%;
                color: white;
                TouchArea 
                {
                    moved => 
                    {
                        if(can-drag)
                        {
                            move-window(self.mouse-x - self.pressed-x, 
                                self.mouse-y - self.pressed-y);
                        }
                    }
                    pointer-event(e) => 
                    {
                        // debug(e.button);
                        // debug(e.kind);
                        
                        if(e.button == PointerEventButton.left && e.kind == PointerEventKind.down)
                        {
                            can-drag = true;
                        }
                        if(e.kind == PointerEventKind.up)
                        {
                            can-drag = false;
                        }
                        draging = can-drag && e.kind == PointerEventKind.move;
                        // debug(can-drag);
                        // debug(draging);
                        
                    }
                }
            }

            

            
            

            Rectangle 
            {
                //y:root.height*2%;
                width: root.height;
                height: root.height;
                
                border-radius: corner-radius;
                background: touch.has-hover? touch.pressed? darkred : #fc9494 : #ffc5c500;

                opacity: 1;

                touch := TouchArea
                {
                    clicked => 
                    { 
                        close() 
                    }
                }

                Text 
                {
                    text: "X";
                    font-size: root.height * 85%;
                    color:touch.has-hover? touch.pressed? red : darkred : white;
                }

            }

        }
    }

    
    

    


}